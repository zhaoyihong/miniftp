!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIN	Makefile	/^BIN=miniftp$/;"	m	language:Make
CC	Makefile	/^CC=g++ $/;"	m	language:Make
CCFLAGS	Makefile	/^CCFLAGS=-Wall -g -std=c++11 -DDEBUG$/;"	m	language:Make
MAX_ARG	common.h	31;"	d	language:C++
MAX_CMD	common.h	30;"	d	language:C++
MAX_COMMAND_LINE	common.h	29;"	d	language:C++
OBJS	Makefile	/^OBJS=main.o sysutils.o session.o ftp_protocol.o private_parent.o$/;"	m	language:Make
Pack_t	sysutils.h	/^}Pack_t;$/;"	t	language:C++	typeref:struct:pack
_COMMON_H	common.h	9;"	d	language:C++
_FTP_PROTOCOL_H	ftp_protocol.h	9;"	d	language:C++
_PRIVATE_PARENT_H	private_parent.h	9;"	d	language:C++
_SESSION_H	session.h	2;"	d	language:C++
_SYSUTILS_H	sysutils.h	3;"	d	language:C++
__handle_sigchld	sysutils.cpp	/^void __handle_sigchld(int sig)$/;"	f	language:C++	signature:(int sig)
__handle_sigchld	sysutils.h	/^void __handle_sigchld(int sig);$/;"	p	language:C++	signature:(int sig)
accept_timeout	sysutils.cpp	/^int accept_timeout(int fd,struct sockaddr_in *addr,unsigned int wait_seconds)$/;"	f	language:C++	signature:(int fd,struct sockaddr_in *addr,unsigned int wait_seconds)
accept_timeout	sysutils.h	/^int accept_timeout(int fd,struct sockaddr_in *addr,unsigned int wait_seconds);$/;"	p	language:C++	signature:(int fd,struct sockaddr_in *addr,unsigned int wait_seconds)
active_nonblock	sysutils.cpp	/^void active_nonblock(int fd)$/;"	f	language:C++	signature:(int fd)
active_nonblock	sysutils.h	/^void active_nonblock(int fd);$/;"	p	language:C++	signature:(int fd)
arg	session.h	/^    char arg[MAX_ARG];$/;"	m	language:C++	struct:session_t	access:public
begin_session	session.cpp	/^void begin_session(session_t &sess)$/;"	f	language:C++	signature:(session_t &sess)
begin_session	session.h	/^void begin_session(session_t sess);$/;"	p	language:C++	signature:(session_t sess)
buf	sysutils.h	/^    char buf[1024];$/;"	m	language:C++	struct:pack	access:public
child_fd	session.h	/^    int parent_fd,child_fd;$/;"	m	language:C++	struct:session_t	access:public
cmd	session.h	/^    char cmd[MAX_CMD];$/;"	m	language:C++	struct:session_t	access:public
cmdline	session.h	/^    char cmdline[MAX_COMMAND_LINE];$/;"	m	language:C++	struct:session_t	access:public
connect_timeout	sysutils.cpp	/^int connect_timeout(int fd,struct sockaddr_in *addr,unsigned int wait_seconds)$/;"	f	language:C++	signature:(int fd,struct sockaddr_in *addr,unsigned int wait_seconds)
connect_timeout	sysutils.h	/^int connect_timeout(int fd,struct sockaddr_in *addr,unsigned int wait_seconds);$/;"	p	language:C++	signature:(int fd,struct sockaddr_in *addr,unsigned int wait_seconds)
ctrl_fd	session.h	/^    int ctrl_fd;$/;"	m	language:C++	struct:session_t	access:public
deactive_nonblock	sysutils.cpp	/^void deactive_nonblock(int fd)$/;"	f	language:C++	signature:(int fd)
deactive_nonblock	sysutils.h	/^void deactive_nonblock(int fd);$/;"	p	language:C++	signature:(int fd)
err_exit	sysutils.cpp	/^void err_exit(const char *msg)$/;"	f	language:C++	signature:(const char *msg)
err_exit	sysutils.h	/^void err_exit(const char *msg);$/;"	p	language:C++	signature:(const char *msg)
getlocalip	sysutils.cpp	/^int getlocalip(char *ip)$/;"	f	language:C++	signature:(char *ip)
getlocalip	sysutils.h	/^int getlocalip(char *ip);$/;"	p	language:C++	signature:(char *ip)
getsockaddr	sysutils.cpp	/^int getsockaddr(int sockfd,int *port,char *ip)$/;"	f	language:C++	signature:(int sockfd,int *port,char *ip)
getsockaddr	sysutils.h	/^int getsockaddr(int,int *,char *);$/;"	p	language:C++	signature:(int,int *,char *)
len	sysutils.h	/^    int len;$/;"	m	language:C++	struct:pack	access:public
main	main.cpp	/^int main(void)$/;"	f	language:C++	signature:(void)
pack	sysutils.h	/^typedef struct pack$/;"	s	language:C++
pack::buf	sysutils.h	/^    char buf[1024];$/;"	m	language:C++	struct:pack	access:public
pack::len	sysutils.h	/^    int len;$/;"	m	language:C++	struct:pack	access:public
parent_fd	session.h	/^    int parent_fd,child_fd;$/;"	m	language:C++	struct:session_t	access:public
process_sigchld	sysutils.cpp	/^void process_sigchld(bool isIgnore)$/;"	f	language:C++	signature:(bool isIgnore)
process_sigchld	sysutils.h	/^void process_sigchld(bool isIgnore);$/;"	p	language:C++	signature:(bool isIgnore)
readPack	sysutils.h	/^int readPack(int fd,Pack_t *buf);$/;"	p	language:C++	signature:(int fd,Pack_t *buf)
read_pack	sysutils.cpp	/^int read_pack(int fd,Pack_t *buf)$/;"	f	language:C++	signature:(int fd,Pack_t *buf)
read_timeout	sysutils.cpp	/^int read_timeout(int fd,unsigned int wait_seconds)$/;"	f	language:C++	signature:(int fd,unsigned int wait_seconds)
read_timeout	sysutils.h	/^int read_timeout(int fd,unsigned int wait_seconds);$/;"	p	language:C++	signature:(int fd,unsigned int wait_seconds)
readline	sysutils.cpp	/^ssize_t readline(int fd,void *buf,size_t maxline)$/;"	f	language:C++	signature:(int fd,void *buf,size_t maxline)
readline	sysutils.h	/^ssize_t readline(int fd,void *buf,size_t maxline);$/;"	p	language:C++	signature:(int fd,void *buf,size_t maxline)
readn	sysutils.cpp	/^ssize_t readn(int fd,void *buf,size_t count)$/;"	f	language:C++	signature:(int fd,void *buf,size_t count)
readn	sysutils.h	/^ssize_t readn(int fd,void *buf,size_t count);$/;"	p	language:C++	signature:(int fd,void *buf,size_t count)
recv_fd	sysutils.cpp	/^int recv_fd(int sockfd)$/;"	f	language:C++	signature:(int sockfd)
recv_fd	sysutils.h	/^void recv_fd(int sockfd,int fd);$/;"	p	language:C++	signature:(int sockfd,int fd)
recv_peek	sysutils.cpp	/^ssize_t recv_peek(int fd,void *buf,size_t len)$/;"	f	language:C++	signature:(int fd,void *buf,size_t len)
recv_peek	sysutils.h	/^ssize_t recv_peek(int fd,void *buf,size_t len);$/;"	p	language:C++	signature:(int fd,void *buf,size_t len)
reuse_addr	sysutils.cpp	/^void reuse_addr(int fd)$/;"	f	language:C++	signature:(int fd)
reuse_addr	sysutils.h	/^void reuse_addr(int fd);$/;"	p	language:C++	signature:(int fd)
send_fd	sysutils.cpp	/^void send_fd(int sockfd,int send_fd)$/;"	f	language:C++	signature:(int sockfd,int send_fd)
send_fd	sysutils.h	/^void send_fd(int sockfd,int fd);$/;"	p	language:C++	signature:(int sockfd,int fd)
session_t	session.h	/^    session_t()$/;"	f	language:C++	struct:session_t	access:public	signature:()
session_t	session.h	/^struct session_t$/;"	s	language:C++
session_t::arg	session.h	/^    char arg[MAX_ARG];$/;"	m	language:C++	struct:session_t	access:public
session_t::child_fd	session.h	/^    int parent_fd,child_fd;$/;"	m	language:C++	struct:session_t	access:public
session_t::cmd	session.h	/^    char cmd[MAX_CMD];$/;"	m	language:C++	struct:session_t	access:public
session_t::cmdline	session.h	/^    char cmdline[MAX_COMMAND_LINE];$/;"	m	language:C++	struct:session_t	access:public
session_t::ctrl_fd	session.h	/^    int ctrl_fd;$/;"	m	language:C++	struct:session_t	access:public
session_t::parent_fd	session.h	/^    int parent_fd,child_fd;$/;"	m	language:C++	struct:session_t	access:public
session_t::session_t	session.h	/^    session_t()$/;"	f	language:C++	struct:session_t	access:public	signature:()
tcp_client	sysutils.cpp	/^int tcp_client(const char *host,unsigned int port)$/;"	f	language:C++	signature:(const char *host,unsigned int port)
tcp_client	sysutils.h	/^int tcp_client(const char *host,unsigned int port);$/;"	p	language:C++	signature:(const char *host,unsigned int port)
tcp_server	sysutils.cpp	/^int tcp_server(const char *host,unsigned int port)$/;"	f	language:C++	signature:(const char *host,unsigned int port)
tcp_server	sysutils.h	/^int tcp_server(const char *host,unsigned int port);$/;"	p	language:C++	signature:(const char *host,unsigned int port)
writePack	sysutils.h	/^int writePack(int fd,Pack_t *buf);$/;"	p	language:C++	signature:(int fd,Pack_t *buf)
write_pack	sysutils.cpp	/^int write_pack(int fd,Pack_t *buf)$/;"	f	language:C++	signature:(int fd,Pack_t *buf)
write_timeout	sysutils.cpp	/^int write_timeout(int fd,unsigned int wait_seconds)$/;"	f	language:C++	signature:(int fd,unsigned int wait_seconds)
write_timeout	sysutils.h	/^int write_timeout(int fd,unsigned int wait_seconds);$/;"	p	language:C++	signature:(int fd,unsigned int wait_seconds)
writen	sysutils.cpp	/^ssize_t writen(int fd,void *buf,size_t count)$/;"	f	language:C++	signature:(int fd,void *buf,size_t count)
writen	sysutils.h	/^ssize_t writen(int fd,void *buf,size_t count);$/;"	p	language:C++	signature:(int fd,void *buf,size_t count)
